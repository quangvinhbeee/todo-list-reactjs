{"version":3,"sources":["component/TaskForm.js","component/Search.js","component/Sort.js","component/Control.js","component/TaskItem.js","component/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","componentWillMount","Edit","onEdit","id","setState","name","status","onClear","componentWillReceiveProps","nextProps","state","onSubmit","event","preventDefault","onCloseForm","onChange","bind","value","target","valuee","this","className","onClick","type","required","Component","Search","onSearch","keyword","onInputSearch","placeholder","Sort","onSort","sortBy","sortStatus","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","Control","TaskItem","onEditItem","task","onDelete","onDeleteItem","onUpdate","onUpdateStatus","index","TaskList","onFilter","filter","statusFilter","nextprops","console","log","elemTasks","tasks","map","toUpperCase","search","key","App","onGenerateDta","randomString","window","localStorage","setItem","JSON","stringify","onToggleForm","isDisplayForm","taskEdit","data","findID","push","kkk","forEach","splice","getItem","parse","s4","Math","floor","random","toString","substring","sort","a","b","elemTaskForm","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4e584a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    componentWillMount = () => {\r\n        var Edit = this.props.onEdit;\r\n        if (Edit.id !== '') {\r\n            this.setState({\r\n                id: Edit.id,\r\n                name: Edit.name,\r\n                status: Edit.status\r\n            })\r\n        } else {\r\n            this.onClear()\r\n        }\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        var Edit = this.state;\r\n        if (Edit.id !== nextProps.id) {\r\n            this.setState({\r\n                id: nextProps.onEdit.id,\r\n                name: nextProps.onEdit.name,\r\n                status: nextProps.onEdit.status\r\n            })\r\n        } else {\r\n            this.onClear();\r\n        }\r\n    }\r\n    onChange(value) {\r\n        var name = value.target.name\r\n        var valuee = value.target.value\r\n        if (name === 'status') { valuee = value.target.value === 'true' ? true : false }\r\n        this.setState({\r\n            [name]: valuee\r\n        })\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.onClear();\r\n        this.onCloseForm();\r\n    }\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n        this.onClear();\r\n    }\r\n    onClear = () => {\r\n        this.setState({\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">{this.state.id === '' ? 'Thêm Công Việc' : 'Sửa Công việc'}\r\n                        <span className=\"fa fa-times-circle float-right btn\"\r\n                            onClick={this.onCloseForm}></span>\r\n                    </h3>\r\n\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} onChange={this.onChange} />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select className=\"form-control\" required=\"required\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                            <option value={true}>Kích Hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <br />\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-warning\" >{this.state.id !== '' ? 'Cập nhật' : 'Thêm'}</button>&nbsp;\r\n                            <button type='button' className=\"btn btn-danger\" onClick={this.onClear}>Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n\r\n    onSearch = (value) => {\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    onInputSearch = (value) => {\r\n        this.setState({\r\n            keyword: value.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" name='inputsearch' value={this.state.keyword} onChange={this.onInputSearch} />\r\n                <span className=\"input-group-btn\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\" onClick={this.onSearch}>\r\n                        <span className=\"fa fa-search mr-5\" />Tìm\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    onSort = (sortBy, sortStatus) => {\r\n        var onSort = {\r\n            sortBy: sortBy,\r\n            sortStatus: sortStatus\r\n        }\r\n        this.props.onSort(onSort)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                    Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li >\r\n                        <a role=\"button\" >\r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\" value={1} onClick={() => { this.onSort('name', 1) }}>\r\n                                Tên A-Z\r\n                        </span>\r\n                        </a>\r\n                    </li>\r\n                    <li >\r\n                        <a role=\"button\">\r\n                            <span className=\"fa fa-sort-alpha-desc pr-5\" value={2} onClick={() => { this.onSort('name', -1) }}>\r\n                                Tên Z-A\r\n                        </span>\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\" />\r\n                    <li value={3}><a role=\"button\" onClick={() => { this.onSort('status', 1) }}>Trạng Thái Kích Hoạt</a></li>\r\n                    <li value={4}><a role=\"button\" onClick={() => { this.onSort('status', -1) }}>Trạng Thái Ẩn</a></li>\r\n                </ul>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search'\r\nimport Sort from './Sort'\r\n\r\n\r\nclass Control extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onSort = (value) => {\r\n        this.props.onSort(value)\r\n    }\r\n    onSearch = (value) => {\r\n        this.props.onSearch(value)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    {/*Search*/}\r\n                    <Search onSearch={this.onSearch} />\r\n                </div>\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    {/*Sort*/}\r\n                    <Sort onSort={this.onSort} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: ''\r\n            , name: ''\r\n            , status: false\r\n        }\r\n    }\r\n    onEdit = () => {\r\n        this.props.onEditItem(this.props.task.id)\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDeleteItem(this.props.task.id)\r\n    }\r\n    onUpdate = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n    render() {\r\n        var { task, index } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\"\r\n                    onClick={this.onUpdate}>\r\n                    <span className={task.status === true ? \"label label-success\" : \"label label-danger\"}>\r\n                        {task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onEdit}>\r\n                        <span className=\"fa fa-pencil mr-5\" />Sửa\r\n                        </button>\r\n                        &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-5\" />Xóa\r\n                        </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem'\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false,\r\n            filter: '',\r\n            statusFilter: -1,\r\n            keyword: ''\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops) {\r\n        this.setState({\r\n            keyword: nextprops.onSearch\r\n        })\r\n    }\r\n    onEdit = (value) => {\r\n        this.props.onEditItem(value)\r\n    }\r\n    onDelete = (value) => {\r\n        this.props.onDeleteItem(value)\r\n    }\r\n    onUpdateStatus = (value) => {\r\n        this.props.onUpdateStatus(value)\r\n    }\r\n    onFilter = (value) => {\r\n        this.setState({\r\n            [value.target.name]: value.target.value\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.state.filter)\r\n        var { tasks } = this.props;\r\n        var elemTasks = tasks.map((task, index) => {\r\n            if (this.state.keyword != '') {\r\n                if (task.name.toUpperCase().search(this.state.keyword.toUpperCase()) > -1) {\r\n                    return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                }\r\n            } else {\r\n                if (this.state.filter != '') {\r\n                    if (task.name.toUpperCase().search(this.state.filter.toUpperCase()) > -1) {\r\n                        if (this.state.statusFilter == -1)\r\n                            return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                        else if (this.state.statusFilter == 0 && !task.status)\r\n                            return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                        else if (this.state.statusFilter == 1 && task.status)\r\n                            return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                    }\r\n                } else {\r\n                    if (this.state.statusFilter == -1)\r\n                        return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                    else if (this.state.statusFilter == 0 && !task.status)\r\n                        return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                    else if (this.state.statusFilter == 1 && task.status)\r\n                        return <TaskItem key={index} task={task} index={index} onUpdateStatus={this.onUpdateStatus} onDeleteItem={this.onDelete} onEditItem={this.onEdit} />\r\n                }\r\n            }\r\n\r\n\r\n        })\r\n        return (\r\n            <table className=\"table table-bordered table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td />\r\n                        <td>\r\n                            <input type=\"text\" className=\"form-control\" name='filter' onChange={this.onFilter} />\r\n                        </td>\r\n                        <td>\r\n                            <select className=\"form-control\" onChange={this.onFilter} name='statusFilter'>\r\n                                <option value={-1}>Tất Cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích Hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td />\r\n                    </tr>\r\n                    {elemTasks}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;\r\n","\nimport TaskFrom from './component/TaskForm'\nimport Control from './component/Control'\nimport TaskList from './component/TaskList'\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [// id: unique, name, status\n\n      ],\n      isDisplayForm: false,\n      taskEdit: {\n        id: '',\n        name: '',\n        status: false\n      },\n      keyword: '',\n      onSort: {\n        sortBy: '',\n        sortStatus: ''\n      }\n    }\n    this.onGenerateDta = this.onGenerateDta.bind(this)\n    this.randomString = this.randomString.bind(this)\n  }\n  componentWillMount() {\n    if (window.localStorage && window.localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(window.localStorage.getItem('tasks'))\n      this.setState({\n        tasks: tasks\n      })\n    }\n  }\n  onGenerateDta = () => {\n    var tasks = [\n      {\n        id: this.randomString(),\n        name: 'Học lập trình',\n        status: false\n      },\n      {\n        id: this.randomString(),\n        name: 'Học nhảy',\n        status: true\n      },\n      {\n        id: this.randomString(),\n        name: 'Học chơi',\n        status: false\n      }\n    ];\n    this.setState({\n      tasks: tasks\n    });\n    window.localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  onToggleForm = () => {\n    this.setState({\n      isDisplayForm: true,\n      taskEdit: {\n        id: '',\n        name: '',\n        status: false\n      }\n    })\n  }\n\n  randomString() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4();\n  }\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n      taskEdit: {\n        id: '',\n        name: '',\n        status: false\n      }\n    })\n  }\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id != '') {\n      var task = {\n        id: data.id,\n        name: data.name,\n        status: data.status\n      }\n      let index = this.findID(data.id)\n      tasks[index] = task\n    } else {\n      var task = {\n        id: this.randomString(),\n        name: data.name,\n        status: data.status\n      }\n      tasks.push(task);\n\n    }\n    this.setState({\n      tasks: tasks\n    })\n    window.localStorage.setItem('tasks', JSON.stringify(tasks));\n    //this.onToggleForm();\n  }\n  findID = (value) => {\n    var { tasks } = this.state;\n    var kkk = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === value) {\n        kkk = index;\n      }\n    });\n    return kkk\n  }\n  onUpdate = (value) => {\n    var { tasks } = this.state\n    let index = this.findID(value);\n    if (index != -1) {\n      tasks[index].status = !tasks[index].status;\n    }\n    this.setState({\n      tasks: tasks\n    })\n    window.localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  onDelete = (value) => {\n    var { tasks } = this.state;\n    let index = this.findID(value)\n    tasks.splice(index, 1);\n    this.setState({\n      tasks: tasks\n    })\n    window.localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  onEdit = (value) => {\n    this.setState({\n      isDisplayForm: true\n    })\n    var index = this.findID(value)\n    var { tasks } = this.state\n    this.setState({\n      taskEdit: this.state.tasks[index]\n    })\n  }\n  onFilter = (value) => {\n    console.log(value.target.value)\n  }\n  onSearch = (value) => {\n    this.setState({\n      keyword: value\n    })\n  }\n  onSort = (value) => {\n    this.setState({\n      onSort: value\n    })\n  }\n  render() {\n    var { tasks, isDisplayForm } = this.state;// lay gia tri tasks trong state\n    if (this.state.onSort.sortBy == 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return this.state.onSort.sortStatus;\n        else if (a.name < b.name) return -this.state.onSort.sortStatus;\n        else return 0;\n      })\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status < b.status) return this.state.onSort.sortStatus;\n        else if (a.status > b.status) return -this.state.onSort.sortStatus;\n        else return 0;\n      })\n    }\n    var elemTaskForm = isDisplayForm ? <TaskFrom onCloseForm={this.onCloseForm} onSubmit={this.onSubmit} onEdit={this.state.taskEdit} /> : '';\n    return (\n      <div className=\"container\" >\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4 \" : \"\"}>\n            {/*TaskFrom*/}\n            {elemTaskForm}\n          </div>\n          <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 \" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 \"}  >\n            <button type=\"button\" className=\"btn btn-primary mb-3\" onClick={this.onToggleForm}>\n              <span className=\"fa fa-plus mr-2 \" />Thêm Công Việc\n            </button>\n            <button type=\"button\" className=\"btn btn-warning ml-1 mb-3\" onClick={this.onGenerateDta}>\n              <span className=\"\" />Generate Data\n            </button>\n            {/*Control*/}\n            <Control onSearch={this.onSearch} onSort={this.onSort} />\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                {/*TaskList*/}\n                <TaskList tasks={tasks} onSearch={this.state.keyword} onUpdateStatus={this.onUpdate} onDeleteItem={this.onDelete} onEditItem={this.onEdit} onFilter={this.onFilter} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}